@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
    @* <li class="nav-item">
        <a  class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @User.Identity?.Name!</a>
    </li>
    <li class="nav-item">
        <form  class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button  type="submit" class="nav-link btn btn-link text-dark">Logout</button>
        </form>
    </li> *@
    <div class="info_admin">
                <iconify-icon icon="ant-design:user-outlined" class="icon_profile"></iconify-icon>
                <div class="data_admin">
                    <p>Admin</p>
                    <p class="email_user">@User.Identity?.Name</p>
                </div>
                <a class="link_logout" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="http://localhost:5234/">
                    <iconify-icon icon="ph:sign-out-bold" class="icon_sign_out"></iconify-icon>
                </a>
    </div>
}
else
{
    <li class="nav-item">
        <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Register</a>
    </li>
    <li class="nav-item">
        <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
}
</ul>
